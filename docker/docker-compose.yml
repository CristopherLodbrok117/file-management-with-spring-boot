services:

  file-manager-api:
    image: file-manager-image
    container_name: file-manager-container
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      mysql_service:
        condition: service_healthy
    ports:
      - "8081:8081"
    # restart: always (not yet)
    networks:
      - spring-network
    environment:
      DATABASE_URL: jdbc:mysql://mysql_database:3306/files_db_v1?createDatabaseIfNotExists=true&serverTimezone=UTC
      DATABASE_USER: root
      DATABASE_PASSWORD: 1234

  mysql_service:
    image: mysql:latest
    container_name: mysql_database
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: files_db_v1
      MYSQL_USER: admin
      MYSQL_PASSWORD: 12345
    ports:
      - "3307:3306"
    networks:
      - spring-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      retries: 10
    #volumes:
     # - mysql-volume:/var/lib/mysql #needs an absolute path


networks:
  spring-network:
    driver: bridge
#volumes:
 # mysql-volume: